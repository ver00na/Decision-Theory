import pandas as pd
import numpy as np

# Создаем DataFrame
df = pd.DataFrame({
    'Диагональ экрана (-)': [14.10, 14.00, 15.60, 15.60, 14.20, 16.00, 14.00, 14.00, 16.00, 15.60],
    'Вес кг (-)': [1.39, 1.49, 1.70, 2.50, 1.55, 1.72, 1.49, 1.37, 1.70, 1.70],
    'Оперативная память Гб (+)': [8, 16, 16, 16, 16, 16, 16, 32, 8, 16],
    'Кол-во ядер (+)': [2, 12, 4, 12, 8, 8, 12, 16, 14, 6],
    'Цена руб (-)': [19990, 79990, 47490, 99590, 239990, 64990, 89990, 123990, 110990, 41240]
})
df.index = ['A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A8', 'A9', 'A10']
print(df)

# Инвертируем значения для критериев, которые должны быть минимизированы
df['Диагональ экрана (-)'] = 1 / df['Диагональ экрана (-)']
df['Вес кг (-)'] = 1 / df['Вес кг (-)']
df['Цена руб (-)'] = 1 / df['Цена руб (-)']
print(df)

# Создаем массив для парного сравнения альтернатив
arr1 = np.zeros((10, 10), dtype="object")
for i in range(10):
    for j in range(i + 1, 10):
        arr = df.iloc[i].values >= df.iloc[j].values
        check = all(x == True for x in arr)
        arr2 = df.iloc[i].values <= df.iloc[j].values
        check2 = all(x == True for x in arr2)
        if check == True:
            arr1[j, i] = 'A' + str(i + 1)
        elif check2 == True:
            arr1[j, i] = 'A' + str(j + 1)
        else:
            arr1[j, i] = 'н'

# Создаем DataFrame для парного сравнения
df_ = pd.DataFrame(arr1, columns=['A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A8', 'A9', 'A10'])
df_.index = ['A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A8', 'A9', 'A10']

print("\nТаблица Попарное сравнение альтернатив:")
print(df_)
print(df.iloc[[0, 2, 5, 9]])

# Инвертируем значения обратно для следующих вычислений
df['Диагональ экрана (-)'] = 1 / df['Диагональ экрана (-)']
df['Вес кг (-)'] = 1 / df['Вес кг (-)']
df['Цена руб (-)'] = 1 / df['Цена руб (-)']

# Отбор по верхней/нижней границе
print("\nРезультат указания верхней/нижней границы: ('Цена руб (-)' <= 90000, 'Вес кг (-)' >= 1.70)")
print(df[(df['Цена руб (-)'] <= 90000) & (df['Вес кг (-)'] <= 1.70)])

# Отбор по заданным критериям
print("\nРезультат отбора вариантов, удовлетворяющих заданным критериям: (главный критерий: цена, 'Вес кг (-)' <= 8.9, 'Страхование' >= 1.5)")
print(df[(df['Оперативная память Гб (+)'] >= 16) & (df['Кол-во ядер (+)'] >= 12)])

# Лексикографическая оптимизация
print("\nРезультат лексикографической оптимизации: (Самая важная: Цена)")
print(df.sort_values(['Цена руб (-)', 'Оперативная память Гб (+)', 'Кол-во ядер (+)', 'Диагональ экрана (-)', 'Вес кг (-)']).head(1))
